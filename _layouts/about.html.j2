<div class="tab-pane container fade" id="about">
  <div class="row" style="height: 60vh">
    <div class="col-lg-8 align-self-center">
      <div class="align-middle blog">
        <h1>About Me</h1>

        <p>
          I do cloud infrastructures ‚Äî
          I make them work, work right, work well, work cheap ‚Äî
          in that order!
        </p>

        <p>
          This section is a kind of a professional one-pager
          (for a 6-pager, see my <a href="#contact" class="nav-link-inline">CV</a>)
          and perhaps a little about what drives me as an engineer.
        </p>

<pre class="left-align">
    ‚Ä¢ Production Engineering ‚Äî SRE/CRE, (Sys|Infra)Ops, Automation, Problem Management
    ‚Ä¢ DevOps ‚Äî CI/CD + CT, Build &amp; Release Engineering, Dev(Sec|Test)Ops, QA/QE
    ‚Ä¢ Cloud Adoption ‚Äî Private/Public Clouds, Migrations, Workload Distribution
    ‚Ä¢ Ecosystems ‚Äî Platforms, Bespoke Services, APIs &amp; Integrations, Tooling
</pre>

        <p>
          I started out in web development in the early 2000s but
          eventually turned to systems engineering after realizing
          I was more interested in other forces at play in
          blue-sky infrastructure ‚Äî
          self-service models,
          virtualization &amp; elastic capacity,
          service oriented architectures,
          distributed &amp; self-healing systems,
          consistency vs availability tradeoffs,
          etc were all enablers but the combined utility of these
          eluded all but the biggest companies in the pre-cloud era.

          Seeing these enablers packaged up as clouds and commoditized to
          the extent that the majority of players in every vertical are
          now cloud natives is testament to a universal need for
          dependable infrastructure as a consumable.

          Yet cloud platforms offer more than just a means to offload burdens
          to the provider, the adoption of cloud best-practices shapes a
          <a href="https://www.sciencedirect.com/science/article/pii/S1877050914007017/pdf?md5=579fbbe1aa1f4e10e7ad57bc2d5535e9&amp;pid=1-s2.0-S1877050914007017-main.pdf"
          >necessary antifragility</a> for consumers ‚Äî
        advancing this agency for business advantage in systems is my
        core area of interest.
        </p>
        <p>
          I'm an
          <a href="/cv/#core-competencies">infrastructure jack-of-all-trades</a>
          but building and managing production systems is where my heart is,
          that makes me less of an AppOps and more of an
          <a href="https://landing.google.com/sre/">SRE</a>
          or
          <a href="https://engineering.fb.com/category/production-engineering/">PE</a>
          (or apply trendy <em>mot du jour</em> here).

          Improving systems for
          change, operations, reliability,
          monitoring and feedback loops,
          putting out fires,
          automating processes &amp; tackling technical debt, etc
          are some activities wherein I see engineering antifragility actually happen.

          I do however take a keen professional interest in in and
          can apply myself in most DevOps areas along the pipelines i.e.
          proactive &amp;
          <a href="https://www.securityroundtable.org/to-improve-devops-and-security-the-time-has-come-to-shift-left/">
          shift-left
          </a> approaches to nipping production problems in the bud ‚Äî
          right-sizing changes,
          <a href="https://devops.com/continuous-testing-vs-test-automation/">
            CT-centric </a> CI/CD,
          DevSecOps,
          rainy-day testing.

        </p>
        <p>
          When I am not
          <a href="http://www.felicepescatore.it/alm/140-firefighter-agile-anti-pattern-eng"
            >fighting fires in production</a>
          I like automate away the
          "<a href="https://www.goodreads.com/quotes/7514660-i-am-not-a-visionary-i-m-an-engineer-i-m-happy"
              >pothole problems</a>" with
          <a href="https://github.com/shalomb">code</a>
          that improves infrastructure state of play
          (I do wish I could contribute more back to the open source community).

          I am a keen proponent of
          <a href="https://devops.com/why-the-buzz-on-software-defined-everything-sdx/"
            >Software-defined-everything</a>
          and evangelize
          <a href="https://devops.com/infrastructure-as-code-and-six-key-automation-concepts/"
            >Infrastructure-as-Code</a>
          engineering to manage all aspects of infrastructure.

          I am still a developer of sorts given the early career prologue
          with code but this is perhaps what SREs are - software engineers
          given systems responsibilities.
        </p>

        <p>
          Where fitting, I'm also interested in improving the ‚Äúhands-off‚Äù albeit
          essential work in this domain ‚Äî
          solution/process design,
          architecture,
          agile delivery,
          tech culture,
          etc (some of these seems contra-agile but ask me
          why agile delivery in the infra space requires
          <em>following a plan over responding to change</em>).
        </p>

        <p>
          Agile, software engineering, economics,
          experiental learning &amp; continuous improvment ‚Äî
          these are my elements in the endeavour of
          dependable and flexible infrastructures.
          In a subtle way, the ultimate goal might just be to
          garner happy smiles all around. üòäüòäüòä
        </p>

      </div>
    </div>

    <div class="col-lg align-self-center">
      <div class="sidepic about"></div>
    </div>
  </div>

</div>
