<div class="tab-pane container fade" id="about">
  <div class="row" style="height: 60vh">
    <div class="col-lg-8 align-self-center">
      <div class="align-middle blog">
        <h1>About Me</h1>

        <p>
          I do cloud infrastructures â€”
          I make them work, work right, work well, work cheap â€”
          in that order!
        </p>

        <p>
          This page is still being contrived, so for now it serves as a
          professional one-pager (for a 6-pager, see my
          <a href="#contact" class="nav-link-inline">CV</a>)
          and an attempt to illustrate what makes me like the things I do.
        </p>

<pre class="left-align">
    â€¢ Production Engineering - SRE/CRE, (Sys|Infra)Ops, Automation, Observability, Incident Management
    â€¢ DevOps â€” CI/CD + CT, Build &amp; Release Engineering, Dev(Sec|Test)Ops, QA/QE
    â€¢ Cloud Adoption â€” Migrations, Cloud-Native Infrastructure &amp; Workload Distribution
    â€¢ Private/Public/Hybrid Clouds â€” IaaS &amp; PaaS, Virtualization, Datacenter Management
    â€¢ Ecosystems â€” Platforms, Bespoke Services, APIs &amp; Integrations, Tooling
</pre>

        <p>
          I started out in web development in the early 2000s but
          eventually turned to systems engineering after realizing
          I was more interested in other forces at play in
          blue-sky infrastructure â€”
          self-service models,
          virtualization &amp; elastic resource utilization,
          resource oriented architectures,
          distributed &amp; self-healing systems,
          consistency vs availability tradeoffs,
          etc were all enablers but the coherent utility of these
          eluded all but the biggest companies in the pre-cloud era.
          Seeing these various enablers packaged up and commoditized over my career
          with the likes of AWS, GCP, Azure, Alibaba, etc, etc now hosting the
          majority of players in every vertical has only demonstrated that
          cloud is the <em>de facto</em> approach.
          Yet cloud platforms offer more than just a means to offload burdens
          to the provider, the adoption of cloud best-practices shapes a
          <a href="https://www.sciencedirect.com/science/article/pii/S1877050914007017/pdf?md5=579fbbe1aa1f4e10e7ad57bc2d5535e9&amp;pid=1-s2.0-S1877050914007017-main.pdf"
             >natural antifragility</a> for cloud denizens.

          My professional calling is applying know-how of these cloud paradigms
          to help business extract the best technical value by
          utilizing industry patterns and practices with continuous improvement
          in the endeavour of building and operating dependable infrastructure.
        </p>

        <p>
          My career prologue with code means I'm still a
          software engineer of sorts.
          When I am not
          <a href="http://www.felicepescatore.it/alm/140-firefighter-agile-anti-pattern-eng"
            >fighting fires</a>
          - I solve
          "<a href="https://www.goodreads.com/quotes/7514660-i-am-not-a-visionary-i-m-an-engineer-i-m-happy"
            >pothole problems</a>" to improve infrastructure state of play.
          I am a keen proponent of
          <a href="https://devops.com/why-the-buzz-on-software-defined-everything-sdx/"
            >Software-Defined-Everything</a>
          and evangelize
          <a href="https://devops.com/infrastructure-as-code-and-six-key-automation-concepts/"
            >Infrastructure-as-Code</a>
          engineering to manage all aspects of infrastructure.
          It's the oft-repeated clichÃ© but not only would I rather work to
          <a href="https://www.theatlantic.com/technology/archive/2018/10/agents-of-automation/568795/">
            automate myself out of a job</a> than find myself applying any amount of
          <a href="https://www.google.com/search?q=define:elbow%20grease">
            "elbow grease"</a> (ðŸ¤–)
          but the nature of cloud-native interactions also means
          developing solutions and
          <a href="https://xkcd.com/1319/">grappling with code</a>
          is a necessary prerequisite and an advantage that
          I am always keen on furthering. For more than ergonomic reasons,
          I reach for code first on my toolbelt.
        </p>

        <p>
          Building and managing antifragile cloud systems is where my heart is,
          that makes me an SRE or PE 
          (or whatever the trendy <em>mot du jour</em> is).
          I do however take a keen professional interest in in and
          can apply myself in most areas along the pipeline i.e.
          proactive &amp;
          <a href="https://www.securityroundtable.org/to-improve-devops-and-security-the-time-has-come-to-shift-left/">
          shift-left
          </a> approaches to nipping production problems in the bud â€”
          right-sizing changes,
          <a href="https://devops.com/continuous-testing-vs-test-automation/">
            CT-centric </a> CI/CD,
          DevSecOps, rainy-day testing, observable operations.
        </p>

        <p>
          Where fitting, I'm also interested in the "hands-off" albeit
          essential work in this domain â€”
          solution/process design,
          architecture,
          project delivery,
          tech ownership,
          tech culture,
          etc (some of these seems contra-agile but ask me
          why agile delivery in the infra space requires
          <em>following a plan over responding to change</em>).
          The overarching goal being productive workforces, healthy businesses â€”
          happy smiles all around. ðŸ˜ŠðŸ˜ŠðŸ˜Š
        </p>

      </div>
    </div>
  </div>

</div>
